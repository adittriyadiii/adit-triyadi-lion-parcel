<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.13.3 on darwin)" generated="2025-06-10T17:08:14.486692" rpa="false" schemaversion="5">
<suite id="s1" name="GetSingleUser" source="/Users/adittriyadi/Documents/adit-triyadi-lion-parcel/Assignment-1-2-4/api/TestCase/GetSingleUser.robot">
<test id="s1-t1" name="Verify user successfully get single user by api" line="11">
<kw name="Given User create session for reqres API">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-10T17:08:14.543661" level="INFO">Creating Session using : alias=user_api, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>user_api</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-10T17:08:14.543580" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.543288" elapsed="0.000512"/>
</kw>
<kw name="When User send GET request to get single user with id ${id}" source_name="User send GET request to get single user with id ${user_id}">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-06-10T17:08:14.635917" level="INFO">GET Request : url=https://reqres.in/api/users/2 
 path_url=/api/users/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-06-10T17:08:14.636025" level="INFO">GET Response : url=https://reqres.in/api/users/2 
 status=200, reason=OK 
 headers={'Date': 'Tue, 10 Jun 2025 10:08:14 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Content-Encoding': 'gzip', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1749544460&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=UJEszEzmCRat0IySd6eqy8FSOUQMqvGh4A5aIz5nU3g%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1749544460&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=UJEszEzmCRat0IySd6eqy8FSOUQMqvGh4A5aIz5nU3g%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Ratelimit-Policy': '100;w=60', 'Ratelimit-Limit': '100', 'Ratelimit-Remaining': '97', 'Ratelimit-Reset': '44', 'Etag': 'W/"152-ApQgGHL6RKwaebFlrPCYPBO1xHg"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'Cf-Cache-Status': 'HIT', 'Age': '5634', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'Cf-Ray': '94d810fb6d0da042-SIN', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19443&amp;min_rtt=19182&amp;rtt_var=5557&amp;sent=5&amp;recv=7&amp;lost=0&amp;retrans=0&amp;sent_bytes=2834&amp;recv_bytes=770&amp;delivery_rate=206854&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=4ffc36b910fd5060&amp;ts=41&amp;x=0"'} 
 body={"data":{"id":2,"email":"janet.weaver@reqres.in","first_name":"Janet","last_name":"Weaver","avatar":"https://reqres.in/img/faces/2-image.jpg"},"support":{"url":"https://contentcaddy.io?utm_source=reqres&amp;utm_medium=json&amp;utm_campaign=referral","text":"Tired of writing endless social media content? Let Content Caddy generate it for you."}} 
 </msg>
<msg time="2025-06-10T17:08:14.636094" level="INFO">/Users/adittriyadi/Documents/adit-triyadi-lion-parcel/venv/lib/python3.13/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-06-10T17:08:14.636203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>user_api</arg>
<arg>/api/users/${user_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-10T17:08:14.544048" elapsed="0.092172"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.636500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-06-10T17:08:14.636360" elapsed="0.000164"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.543928" elapsed="0.092639"/>
</kw>
<kw name="Then User should receive response with status code 200" source_name="User should receive response with status code ${expected_status}">
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-06-10T17:08:14.636901" elapsed="0.000161"/>
</kw>
<kw name="Log Full Response Body">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.637641" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.637292" elapsed="0.000367"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.637954" level="INFO">${formatted_json} = {
   "data": {
      "id": 2,
      "email": "janet.weaver@reqres.in",
      "first_name": "Janet",
      "last_name": "Weaver",
      "avatar": "https://reqres.in/img/faces/2-image.jpg"
   },
   "sup...</msg>
<var>${formatted_json}</var>
<arg>json.dumps($response_json, indent=3)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-10T17:08:14.637732" elapsed="0.000238"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${formatted_json}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-10T17:08:14.638039" elapsed="0.000086"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.637151" elapsed="0.001006"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.636732" elapsed="0.001449"/>
</kw>
<kw name="And User see response header should contain Content-Type application/json; charset=utf-8" source_name="User see response header should contain Content-Type ${expected_content_type}">
<kw name="Dictionary Should Contain Item" owner="Collections">
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<arg>${expected_content_type}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" start="2025-06-10T17:08:14.638444" elapsed="0.000314"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.638282" elapsed="0.000510"/>
</kw>
<kw name="And User see response body should contain user data with id ${id}" source_name="User see response body should contain user data with id ${expected_id}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.639324" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.639093" elapsed="0.000246"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.639610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response_json['data']['id']}</arg>
<arg>${expected_id}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-10T17:08:14.639394" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.638928" elapsed="0.000740"/>
</kw>
<kw name="And User see response body should contain user first name Janet" source_name="User see response body should contain user first name ${expected_first_name}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.640165" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.639949" elapsed="0.000231"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['data']['first_name']}</arg>
<arg>${expected_first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.640235" elapsed="0.000216"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.639821" elapsed="0.000659"/>
</kw>
<kw name="And User see response body should contain user last name Weaver" source_name="User see response body should contain user last name ${expected_last_name}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.641021" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.640717" elapsed="0.000319"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['data']['last_name']}</arg>
<arg>${expected_last_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.641094" elapsed="0.000217"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.640567" elapsed="0.000772"/>
</kw>
<kw name="And User see response body should contain user email janet.weaver@reqres.in" source_name="User see response body should contain user email ${expected_email}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.641790" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.641566" elapsed="0.000238"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['data']['email']}</arg>
<arg>${expected_email}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.641860" elapsed="0.000202"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.641440" elapsed="0.000651"/>
</kw>
<kw name="And User see response body should contain user avatar https://reqres.in/img/faces/2-image.jpg" source_name="User see response body should contain user avatar ${expected_avatar}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.642649" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.642370" elapsed="0.000299"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['data']['avatar']}</arg>
<arg>${expected_avatar}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.642801" elapsed="0.000342"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.642181" elapsed="0.001011"/>
</kw>
<kw name="And User see response body should contain support information">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-10T17:08:14.643715" level="INFO">${response_json} = {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?ut...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-10T17:08:14.643464" elapsed="0.000269"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['support']['url']}</arg>
<arg>https://contentcaddy.io?utm_source=reqres&amp;utm_medium=json&amp;utm_campaign=referral</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.643796" elapsed="0.000226"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_json['support']['text']}</arg>
<arg>Tired of writing endless social media content? Let Content Caddy generate it for you.</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-10T17:08:14.644337" elapsed="0.000292"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.643326" elapsed="0.001346"/>
</kw>
<status status="PASS" start="2025-06-10T17:08:14.542946" elapsed="0.101813"/>
</test>
<status status="PASS" start="2025-06-10T17:08:14.488363" elapsed="0.156657"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="GetSingleUser" id="s1" pass="1" fail="0" skip="0">GetSingleUser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
